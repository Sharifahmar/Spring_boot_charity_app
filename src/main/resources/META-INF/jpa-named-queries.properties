findUserIdUserKeyEntity=select KEY_ID,CREATED_DATE,UPDATED_DATE,END_DATE,KEY_DESC,PRIVATE_KEY,START_DATE,USER_ID,KEY_STATUS from USER_KEYS where USER_ID = ?1 and KEY_STATUS= ?2
findByFileType=select * from USER_IMAGES where id = ?1 and fileName= ?2
findImgByIdAndStatus=select * from USER_IMAGES where USER_ID = ?1 and IMG_STS = ?2
donarContributionJoinQuerySearchCriteria=select new com.ecomm.akhtar.model.DonarContributionDTO(dme.donationAmountId,de.fullName,de.phoneNumber,de.address,dme.receiptNumber,dte.donationType,dte.donationTypeId,dme.donationAmount,dme.createdDt) from DonationAmountEntity dme join dme.donarsEntity de join dme.donationTypeEntity dte where (:fullName is null or de.fullName like %:fullName%) and (:donationTypeId is null or dte.donationTypeId =:donationTypeId) and dme.status =:status and (:fromDate is null or dme.createdDt >= :fromDate) and (:toDate is null or dme.createdDt <:toDate)
donarSearchCriteria=select d FROM DonarsEntity d WHERE (:fullName is null or d.fullName like %:fullName%) and (:phoneNumber is null or d.phoneNumber like %:phoneNumber%) and d.status =:status
acceptorSearchCriteria=select a FROM AcceptorEntity a WHERE (:fullName is null or a.fullName like %:fullName%) and (:phoneNumber is null or a.phoneNumber like %:phoneNumber%) and a.status =:status
studentSearchCriteria=select s FROM StudentsEntity s WHERE (:firstName is null or s.firstName like %:firstName%) and (:phoneNumber is null or s.phoneNumber like %:phoneNumber%) and (:aadhaarNumber is null or s.aadhaarNumber like %:aadhaarNumber%) and s.status =:status
acceptorContributionJoinQuerySearchCriteria=select new com.ecomm.akhtar.model.AcceptorContributionDTO(ame.acceptorAmountId,ae.fullName,ae.phoneNumber,ae.address,ame.tokenNumber,dte.donationType,dte.donationTypeId,ame.acceptorAmount,ame.createdDt) from AcceptorAmountEntity ame join ame.acceptorEntity ae join ame.donationTypeEntity dte where (:phoneNumber is null or ae.phoneNumber like %:phoneNumber%) and (:donationTypeId is null or dte.donationTypeId =:donationTypeId) and ame.status =:status and (:fromDate is null or ame.createdDt >= :fromDate) and (:toDate is null or ame.createdDt <:toDate)